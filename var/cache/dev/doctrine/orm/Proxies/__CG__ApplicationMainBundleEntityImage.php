<?php

namespace Proxies\__CG__\Application\MainBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Image extends \Application\MainBundle\Entity\Image implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'id', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'updated', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'name', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'filter', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'extension', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'description', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'creation', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'mandatory', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'input', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'tempFilename'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'id', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'updated', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'name', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'filter', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'extension', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'description', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'creation', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'mandatory', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'input', '' . "\0" . 'Application\\MainBundle\\Entity\\Image' . "\0" . 'tempFilename'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Image $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtension($extension)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtension', [$extension]);

        return parent::setExtension($extension);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtension', []);

        return parent::getExtension();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreation($creation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreation', [$creation]);

        return parent::setCreation($creation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreation', []);

        return parent::getCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setInput(\Symfony\Component\HttpFoundation\File\UploadedFile $input)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInput', [$input]);

        return parent::setInput($input);
    }

    /**
     * {@inheritDoc}
     */
    public function getInput()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInput', []);

        return parent::getInput();
    }

    /**
     * {@inheritDoc}
     */
    public function setMandatory($mandatory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMandatory', [$mandatory]);

        return parent::setMandatory($mandatory);
    }

    /**
     * {@inheritDoc}
     */
    public function getMandatory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMandatory', []);

        return parent::getMandatory();
    }

    /**
     * {@inheritDoc}
     */
    public function imageValid(\Symfony\Component\Validator\Context\ExecutionContextInterface $context, $payload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'imageValid', [$context, $payload]);

        return parent::imageValid($context, $payload);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', []);

        return parent::preUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', []);

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function preRemoveUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preRemoveUpload', []);

        return parent::preRemoveUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', []);

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadDir', []);

        return parent::getUploadDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', []);

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultWebPath', []);

        return parent::getDefaultWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilter($filter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilter', [$filter]);

        return parent::setFilter($filter);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilter', []);

        return parent::getFilter();
    }

}
