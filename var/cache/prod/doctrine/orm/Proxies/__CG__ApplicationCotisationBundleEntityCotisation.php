<?php

namespace Proxies\__CG__\Application\CotisationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cotisation extends \Application\CotisationBundle\Entity\Cotisation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'id', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'yearCotisation', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'user', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'payed', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'pricecotisation', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'paymentType', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'cotisationLibre', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'paymentInstruction', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'datePaiement'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'id', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'yearCotisation', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'user', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'payed', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'pricecotisation', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'paymentType', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'cotisationLibre', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'paymentInstruction', '' . "\0" . 'Application\\CotisationBundle\\Entity\\Cotisation' . "\0" . 'datePaiement'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cotisation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function isPayed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPayed', []);

        return parent::isPayed();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayed($payed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayed', [$payed]);

        return parent::setPayed($payed);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Admin\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getYearCotisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearCotisation', []);

        return parent::getYearCotisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearCotisation($yearCotisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearCotisation', [$yearCotisation]);

        return parent::setYearCotisation($yearCotisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPricecotisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricecotisation', []);

        return parent::getPricecotisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setPricecotisation($pricecotisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricecotisation', [$pricecotisation]);

        return parent::setPricecotisation($pricecotisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentType', []);

        return parent::getPaymentType();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTypeLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTypeLabel', []);

        return parent::getPaymentTypeLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentType($paymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentType', [$paymentType]);

        return parent::setPaymentType($paymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getCotisationLibre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCotisationLibre', []);

        return parent::getCotisationLibre();
    }

    /**
     * {@inheritDoc}
     */
    public function setCotisationLibre($cotisationLibre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCotisationLibre', [$cotisationLibre]);

        return parent::setCotisationLibre($cotisationLibre);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentInstruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentInstruction', []);

        return parent::getPaymentInstruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentInstruction($paymentInstruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentInstruction', [$paymentInstruction]);

        return parent::setPaymentInstruction($paymentInstruction);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePaiement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePaiement', []);

        return parent::getDatePaiement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePaiement($datePaiement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePaiement', [$datePaiement]);

        return parent::setDatePaiement($datePaiement);
    }

}
