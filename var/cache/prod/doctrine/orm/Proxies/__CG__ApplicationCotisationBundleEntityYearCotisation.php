<?php

namespace Proxies\__CG__\Application\CotisationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class YearCotisation extends \Application\CotisationBundle\Entity\YearCotisation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'id', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'year', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'promoReduiteMax', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'dateEnabled', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'cotisations', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'reducedFeeAmount', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'minAmount', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount1', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount2', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount3', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount4'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'id', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'year', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'promoReduiteMax', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'dateEnabled', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'cotisations', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'reducedFeeAmount', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'minAmount', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount1', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount2', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount3', '' . "\0" . 'Application\\CotisationBundle\\Entity\\YearCotisation' . "\0" . 'proposedAmount4'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (YearCotisation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnabled', []);

        return parent::getDateEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnabled($dateEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnabled', [$dateEnabled]);

        return parent::setDateEnabled($dateEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCotisations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCotisations', []);

        return parent::getCotisations();
    }

    /**
     * {@inheritDoc}
     */
    public function setCotisations($cotisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCotisations', [$cotisation]);

        return parent::setCotisations($cotisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinAmount', []);

        return parent::getMinAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinAmount($minAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinAmount', [$minAmount]);

        return parent::setMinAmount($minAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposedAmount1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposedAmount1', []);

        return parent::getProposedAmount1();
    }

    /**
     * {@inheritDoc}
     */
    public function setProposedAmount1($proposedAmount1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProposedAmount1', [$proposedAmount1]);

        return parent::setProposedAmount1($proposedAmount1);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposedAmount2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposedAmount2', []);

        return parent::getProposedAmount2();
    }

    /**
     * {@inheritDoc}
     */
    public function setProposedAmount2($proposedAmount2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProposedAmount2', [$proposedAmount2]);

        return parent::setProposedAmount2($proposedAmount2);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposedAmount3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposedAmount3', []);

        return parent::getProposedAmount3();
    }

    /**
     * {@inheritDoc}
     */
    public function setProposedAmount3($proposedAmount3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProposedAmount3', [$proposedAmount3]);

        return parent::setProposedAmount3($proposedAmount3);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposedAmount4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposedAmount4', []);

        return parent::getProposedAmount4();
    }

    /**
     * {@inheritDoc}
     */
    public function setProposedAmount4($proposedAmount4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProposedAmount4', [$proposedAmount4]);

        return parent::setProposedAmount4($proposedAmount4);
    }

    /**
     * {@inheritDoc}
     */
    public function getReducedFeeAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReducedFeeAmount', []);

        return parent::getReducedFeeAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setReducedFeeAmount($reducedFeeAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReducedFeeAmount', [$reducedFeeAmount]);

        return parent::setReducedFeeAmount($reducedFeeAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromoReduiteMax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromoReduiteMax', []);

        return parent::getPromoReduiteMax();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromoReduiteMax($promoReduiteMax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromoReduiteMax', [$promoReduiteMax]);

        return parent::setPromoReduiteMax($promoReduiteMax);
    }

}
